// Code generated by protoc-gen-go. DO NOT EDIT.
// source: brandManagerment.proto

package brandManagerment

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Foo struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Foo) Reset()         { *m = Foo{} }
func (m *Foo) String() string { return proto.CompactTextString(m) }
func (*Foo) ProtoMessage()    {}
func (*Foo) Descriptor() ([]byte, []int) {
	return fileDescriptor_42dd74ba35ef748c, []int{0}
}

func (m *Foo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Foo.Unmarshal(m, b)
}
func (m *Foo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Foo.Marshal(b, m, deterministic)
}
func (m *Foo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Foo.Merge(m, src)
}
func (m *Foo) XXX_Size() int {
	return xxx_messageInfo_Foo.Size(m)
}
func (m *Foo) XXX_DiscardUnknown() {
	xxx_messageInfo_Foo.DiscardUnknown(m)
}

var xxx_messageInfo_Foo proto.InternalMessageInfo

type Brand struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Brand) Reset()         { *m = Brand{} }
func (m *Brand) String() string { return proto.CompactTextString(m) }
func (*Brand) ProtoMessage()    {}
func (*Brand) Descriptor() ([]byte, []int) {
	return fileDescriptor_42dd74ba35ef748c, []int{1}
}

func (m *Brand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Brand.Unmarshal(m, b)
}
func (m *Brand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Brand.Marshal(b, m, deterministic)
}
func (m *Brand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Brand.Merge(m, src)
}
func (m *Brand) XXX_Size() int {
	return xxx_messageInfo_Brand.Size(m)
}
func (m *Brand) XXX_DiscardUnknown() {
	xxx_messageInfo_Brand.DiscardUnknown(m)
}

var xxx_messageInfo_Brand proto.InternalMessageInfo

func (m *Brand) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ListBrands struct {
	ListBrands           []*Brand `protobuf:"bytes,1,rep,name=listBrands,proto3" json:"listBrands,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListBrands) Reset()         { *m = ListBrands{} }
func (m *ListBrands) String() string { return proto.CompactTextString(m) }
func (*ListBrands) ProtoMessage()    {}
func (*ListBrands) Descriptor() ([]byte, []int) {
	return fileDescriptor_42dd74ba35ef748c, []int{2}
}

func (m *ListBrands) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBrands.Unmarshal(m, b)
}
func (m *ListBrands) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBrands.Marshal(b, m, deterministic)
}
func (m *ListBrands) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBrands.Merge(m, src)
}
func (m *ListBrands) XXX_Size() int {
	return xxx_messageInfo_ListBrands.Size(m)
}
func (m *ListBrands) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBrands.DiscardUnknown(m)
}

var xxx_messageInfo_ListBrands proto.InternalMessageInfo

func (m *ListBrands) GetListBrands() []*Brand {
	if m != nil {
		return m.ListBrands
	}
	return nil
}

type Vehicle struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vehicle) Reset()         { *m = Vehicle{} }
func (m *Vehicle) String() string { return proto.CompactTextString(m) }
func (*Vehicle) ProtoMessage()    {}
func (*Vehicle) Descriptor() ([]byte, []int) {
	return fileDescriptor_42dd74ba35ef748c, []int{3}
}

func (m *Vehicle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vehicle.Unmarshal(m, b)
}
func (m *Vehicle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vehicle.Marshal(b, m, deterministic)
}
func (m *Vehicle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vehicle.Merge(m, src)
}
func (m *Vehicle) XXX_Size() int {
	return xxx_messageInfo_Vehicle.Size(m)
}
func (m *Vehicle) XXX_DiscardUnknown() {
	xxx_messageInfo_Vehicle.DiscardUnknown(m)
}

var xxx_messageInfo_Vehicle proto.InternalMessageInfo

func (m *Vehicle) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ListVehicle struct {
	ListVehicles         []*Vehicle `protobuf:"bytes,1,rep,name=listVehicles,proto3" json:"listVehicles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListVehicle) Reset()         { *m = ListVehicle{} }
func (m *ListVehicle) String() string { return proto.CompactTextString(m) }
func (*ListVehicle) ProtoMessage()    {}
func (*ListVehicle) Descriptor() ([]byte, []int) {
	return fileDescriptor_42dd74ba35ef748c, []int{4}
}

func (m *ListVehicle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListVehicle.Unmarshal(m, b)
}
func (m *ListVehicle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListVehicle.Marshal(b, m, deterministic)
}
func (m *ListVehicle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListVehicle.Merge(m, src)
}
func (m *ListVehicle) XXX_Size() int {
	return xxx_messageInfo_ListVehicle.Size(m)
}
func (m *ListVehicle) XXX_DiscardUnknown() {
	xxx_messageInfo_ListVehicle.DiscardUnknown(m)
}

var xxx_messageInfo_ListVehicle proto.InternalMessageInfo

func (m *ListVehicle) GetListVehicles() []*Vehicle {
	if m != nil {
		return m.ListVehicles
	}
	return nil
}

func init() {
	proto.RegisterType((*Foo)(nil), "brandManagerment.Foo")
	proto.RegisterType((*Brand)(nil), "brandManagerment.Brand")
	proto.RegisterType((*ListBrands)(nil), "brandManagerment.ListBrands")
	proto.RegisterType((*Vehicle)(nil), "brandManagerment.Vehicle")
	proto.RegisterType((*ListVehicle)(nil), "brandManagerment.ListVehicle")
}

func init() { proto.RegisterFile("brandManagerment.proto", fileDescriptor_42dd74ba35ef748c) }

var fileDescriptor_42dd74ba35ef748c = []byte{
	// 249 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4b, 0x2a, 0x4a, 0xcc,
	0x4b, 0xf1, 0x4d, 0xcc, 0x4b, 0x4c, 0x4f, 0x2d, 0xca, 0x4d, 0xcd, 0x2b, 0xd1, 0x2b, 0x28, 0xca,
	0x2f, 0xc9, 0x17, 0x12, 0x40, 0x17, 0x97, 0x92, 0x49, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x4f,
	0x2c, 0xc8, 0xd4, 0x4f, 0xcc, 0xcb, 0xcb, 0x2f, 0x49, 0x2c, 0xc9, 0xcc, 0xcf, 0x2b, 0x86, 0xa8,
	0x57, 0x62, 0xe5, 0x62, 0x76, 0xcb, 0xcf, 0x57, 0x92, 0xe6, 0x62, 0x75, 0x02, 0x69, 0x14, 0x12,
	0xe2, 0x62, 0xc9, 0x4b, 0xcc, 0x4d, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x95,
	0x5c, 0xb9, 0xb8, 0x7c, 0x32, 0x8b, 0x4b, 0xc0, 0x0a, 0x8a, 0x85, 0xcc, 0xb9, 0xb8, 0x72, 0xe0,
	0x3c, 0x09, 0x46, 0x05, 0x66, 0x0d, 0x6e, 0x23, 0x71, 0x3d, 0x0c, 0xe7, 0x80, 0xe5, 0x83, 0x90,
	0x94, 0x2a, 0xc9, 0x72, 0xb1, 0x87, 0xa5, 0x66, 0x64, 0x26, 0xe7, 0xa4, 0x62, 0xb5, 0xc5, 0x87,
	0x8b, 0x1b, 0x64, 0x0b, 0x4c, 0x89, 0x2d, 0x17, 0x4f, 0x0e, 0x82, 0x0b, 0xb3, 0x48, 0x12, 0xd3,
	0x22, 0xa8, 0x8a, 0x20, 0x14, 0xe5, 0x46, 0x1b, 0x18, 0xb9, 0x78, 0x9c, 0x90, 0x94, 0x0a, 0x05,
	0x73, 0x71, 0xb8, 0xa7, 0x42, 0x9c, 0x22, 0x24, 0x8a, 0x69, 0x8a, 0x5b, 0x7e, 0xbe, 0x94, 0x0c,
	0xa6, 0x30, 0xc2, 0xdf, 0x4a, 0x42, 0x4d, 0x97, 0x9f, 0x4c, 0x66, 0xe2, 0x11, 0xe2, 0xd2, 0x4f,
	0x4f, 0x85, 0x85, 0x85, 0x37, 0x17, 0x3f, 0xcc, 0x50, 0x98, 0xbb, 0x71, 0x05, 0x85, 0x94, 0x2c,
	0x76, 0xd3, 0xa1, 0xfa, 0x94, 0x18, 0x92, 0xd8, 0xc0, 0x31, 0x62, 0x0c, 0x08, 0x00, 0x00, 0xff,
	0xff, 0x26, 0xda, 0x73, 0xdb, 0xdb, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BrandManagerClient is the client API for BrandManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BrandManagerClient interface {
	GetBrand(ctx context.Context, in *Foo, opts ...grpc.CallOption) (*ListBrands, error)
	GetBrandVehicle(ctx context.Context, in *Brand, opts ...grpc.CallOption) (*ListVehicle, error)
}

type brandManagerClient struct {
	cc *grpc.ClientConn
}

func NewBrandManagerClient(cc *grpc.ClientConn) BrandManagerClient {
	return &brandManagerClient{cc}
}

func (c *brandManagerClient) GetBrand(ctx context.Context, in *Foo, opts ...grpc.CallOption) (*ListBrands, error) {
	out := new(ListBrands)
	err := c.cc.Invoke(ctx, "/brandManagerment.BrandManager/GetBrand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brandManagerClient) GetBrandVehicle(ctx context.Context, in *Brand, opts ...grpc.CallOption) (*ListVehicle, error) {
	out := new(ListVehicle)
	err := c.cc.Invoke(ctx, "/brandManagerment.BrandManager/GetBrandVehicle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BrandManagerServer is the server API for BrandManager service.
type BrandManagerServer interface {
	GetBrand(context.Context, *Foo) (*ListBrands, error)
	GetBrandVehicle(context.Context, *Brand) (*ListVehicle, error)
}

// UnimplementedBrandManagerServer can be embedded to have forward compatible implementations.
type UnimplementedBrandManagerServer struct {
}

func (*UnimplementedBrandManagerServer) GetBrand(ctx context.Context, req *Foo) (*ListBrands, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBrand not implemented")
}
func (*UnimplementedBrandManagerServer) GetBrandVehicle(ctx context.Context, req *Brand) (*ListVehicle, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBrandVehicle not implemented")
}

func RegisterBrandManagerServer(s *grpc.Server, srv BrandManagerServer) {
	s.RegisterService(&_BrandManager_serviceDesc, srv)
}

func _BrandManager_GetBrand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Foo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrandManagerServer).GetBrand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/brandManagerment.BrandManager/GetBrand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrandManagerServer).GetBrand(ctx, req.(*Foo))
	}
	return interceptor(ctx, in, info, handler)
}

func _BrandManager_GetBrandVehicle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Brand)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrandManagerServer).GetBrandVehicle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/brandManagerment.BrandManager/GetBrandVehicle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrandManagerServer).GetBrandVehicle(ctx, req.(*Brand))
	}
	return interceptor(ctx, in, info, handler)
}

var _BrandManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "brandManagerment.BrandManager",
	HandlerType: (*BrandManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBrand",
			Handler:    _BrandManager_GetBrand_Handler,
		},
		{
			MethodName: "GetBrandVehicle",
			Handler:    _BrandManager_GetBrandVehicle_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "brandManagerment.proto",
}
